# -*- coding: utf-8 -*-
"""codingappleDeepLearning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14G3mEOE7tam61SiPeW8AFhKebKNd_qGV
"""

import tensorflow as tf
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/data/gpascore.csv")
df.head()

print(df.shape)

# Preprocessing

print(df.isnull().sum())
# gre에 null값이 하나 있다.

print(df[df.isnull().any(axis = 1)], end = '\n\n')
index = df[df.isnull().any(axis = 1)].index
print("결측치가 있는 행은 %s 행이다." %(index))

df = df.fillna(round(df['gre'].mean(), 0)) # 결측치가 gre에만 있기 때문에 gre의 평균으로 대체
print("결측치가 있는 행에 평균대체가 잘 이루어졌는지 확인\n\n", df.iloc[index,])

# df = df.dropna()
# print(df.isnull().sum())
# print(df.shape)
# null값이 있는 행(데이터)을 제거했기 때문에 행의 개수가 하나 줄어있다.

"""## pd 함수들

```
df.min() # 최솟값
df.max() # 최댓값
df.count() # 행의 개수
```
"""

x = []

for i, rows in df.iterrows(): # iterrow:
    x.append([rows['gre'], rows['gpa'], rows['rank']])

y = df['admit'].values # .values: list로 처리
print(x, y)

model = tf.keras.models.Sequential([
    tf.keras.layers.Dense(64, activation='tanh'),
    tf.keras.layers.Dense(128, activation='tanh'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

model.fit(np.array(x), np.array(y), epochs = 1000)

predict = model.predict( np.array([ [900, 3.9, 4], [400, 2.2, 1], [900, 3.9, 1] ]) )
print(predict)

'''
재밌는 점
900, 3.9라는 매우 우수한 성적으로 rank가 4인 학교에 지원할 때보다 rank가 1인 학교에 지원할 때 합격률이 높다.
-> 높은 성적일수록 rank가 높은 학교에 지원하는 표본이 많기 때문?
'''

# indexing

df_great = df.loc[ (df['gre'] > 590) & (df['gpa'] > 3.5)]