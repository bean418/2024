# -*- coding: utf-8 -*-
"""01_Graph.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YqLa_M3h1_LeJkUz40lyh40XBJTzYl9U
"""

import matplotlib.pyplot as plt

x = [1, 2, 3]
y = [2, 4, 8]
print(plt.plot(x, y))

# 함수 반환 값이 출력된다. : [<matplotlib.lines.Line2D at 0x7d7ef0a33f10>]

plt.plot(x, y)
plt.show()

# 반환 값 없이 그래프 출력

plt.plot(x, y)
plt.title("Line Graph")
plt.show()

"""## 한글 폰트 설정"""

import matplotlib.pyplot as plt
import matplotlib.font_manager as fm

# Download and install NanumGothic fonts manually
!wget https://github.com/google/fonts/raw/main/ofl/nanumgothic/NanumGothic-Regular.ttf

# Refresh font cache
!fc-cache -fv

# Clear matplotlib font cache
!rm ~/.cache/matplotlib -rf

# Add the current directory to font manager's search path
font_dirs = './'
font_files = fm.findSystemFonts(fontpaths=font_dirs)

'''
What it means: The root directory (/) is the top-level directory
of the entire file system in a Linux environment.

What it means: The ./ refers to the current working directory,
which is /content/ in Google Colab.

Using './': This is optimal when dealing with fonts
you have uploaded or downloaded in Colab.

Using '/': This will include system-wide fonts,
but may take more time and may not be necessary
unless you want to search the entire file system for fonts.
'''

# Add the font files to matplotlib's font manager
for font_file in font_files:
    fm.fontManager.addfont(font_file)

# Set the NanumGothic font (or any other font available in the current directory)
plt.rc('font', family='NanumGothic')

import matplotlib as mp
# mp.rcParams['font.family'] = "AppleGothic"
mp.rcParams['font.size'] = 15
mp.rcParams['axes.unicode_minus'] = False # 한글 폰트 사용 시, 마이너스 글자가 깨지는 현상 해결

# List of all font names
font_names = [f.name for f in fm.fontManager.ttflist]

# The string you are looking for
search_string = 'NanumGothic'

# Check if the search_string is in the list of font names
if search_string in font_names:
    print(f"The font '{search_string}' is available.")
else:
    print(f"The font '{search_string}' is not available.")

# 나눔고딕을 사용할 수 있음.

plt.plot([-1, 0, 1], [-5, 1, 2])
plt.title("한글 타이틀")