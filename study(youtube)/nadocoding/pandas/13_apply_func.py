# -*- coding: utf-8 -*-
"""13_Apply_Func.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cYVsWzY-VYoWveE3FhoRrURTUCVI3Ily
"""

import pandas as pd
import numpy as np

data = {
    '이름' : ['채치수', '정대만', '송태섭', '서태웅', '강백호', '변덕규', '황태산', '윤대협'],
    '학교' : ['북산고', '북산고', '북산고', '북산고', '북산고', '능남고', '능남고', '능남고'],
    '키' : [197, 184, 168, 187, 188, 202, 188, 190],
    '국어' : [90, 40, 80, 40, 15, 80, 55, 100],
    '영어' : [85, 35, 75, 60, 20, 100, 65, 85],
    '수학' : [100, 50, 70, 70, 10, 95, 45, 90],
    '과학' : [95, 55, 80, 75, 35, 85, 40, 95],
    '사회' : [85, 25, 75, 80, 10, 80, 35, 95],
    'SW특기' : ['Python', 'Java', 'Javascript', np.nan, np.nan, 'C', 'PYTHON', 'C#']
}

df = pd.DataFrame(data, index = ["1번", "2번", "3번", "4번", "5번", "6번", "7번", "8번"])
df.index.name = "지원번호"

df_copy = df.copy(deep = True)

df['키'] = df['키'] + 'cm'

# error : 정수형 자료와 문자형의 연산 불가

# 키 뒤에 cm를 붙이는 역할

def add_cm(height):
    return str(height) + 'cm'

# 키 데이터에 대해서 add_cm 함수를 호출한 결과를 데이터에 반영
# -> add_cm(data1), add_cm(data2), ...

df['키'] = df['키'].apply(add_cm)

df

# SW특기의 데이터들을 일관성있게 정리하기(첫 글자는 대문자, 나머지 글자는 소문자로 변경)

def capitalize(lang):
    if pd.notnull(lang):
        return lang.capitalize() # string 내에서 제공하는 함수인 capitalize, 첫 글자는 대문자 나머지는 소문자로
    return lang # Nan이면 그냥 반환

df['SW특기'] = df['SW특기'].apply(capitalize)

df

df['SW특기'].str.capitalize() # 실제 함수도 있음